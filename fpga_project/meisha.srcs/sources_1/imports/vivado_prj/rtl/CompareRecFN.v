module CompareRecFN( 
  input  [64:0] io_a, 
  input  [64:0] io_b, 
  input         io_signaling, 
  output        io_lt, 
  output        io_eq, 
  output [4:0]  io_exceptionFlags 
);
  wire [11:0] _T_11; 
  wire [2:0] _T_12; 
  wire  rawA_isZero; 
  wire [1:0] _T_14; 
  wire  _T_15; 
  wire  _T_17; 
  wire  rawA_isNaN; 
  wire  _T_20; 
  wire  rawA_isInf; 
  wire  rawA_sign; 
  wire [12:0] rawA_sExp; 
  wire  _T_24; 
  wire [51:0] _T_25; 
  wire [1:0] _T_26; 
  wire [53:0] rawA_sig; 
  wire [11:0] _T_28; 
  wire [2:0] _T_29; 
  wire  rawB_isZero; 
  wire [1:0] _T_31; 
  wire  _T_32; 
  wire  _T_34; 
  wire  rawB_isNaN; 
  wire  _T_37; 
  wire  rawB_isInf; 
  wire  rawB_sign; 
  wire [12:0] rawB_sExp; 
  wire  _T_41; 
  wire [51:0] _T_42; 
  wire [1:0] _T_43; 
  wire [53:0] rawB_sig; 
  wire  _T_45; 
  wire  _T_46; 
  wire  ordered; 
  wire  bothInfs; 
  wire  bothZeros; 
  wire  eqExps; 
  wire  _T_47; 
  wire  _T_48; 
  wire  _T_49; 
  wire  common_ltMags; 
  wire  _T_50; 
  wire  common_eqMags; 
  wire  _T_51; 
  wire  _T_52; 
  wire  _T_53; 
  wire  _T_54; 
  wire  _T_55; 
  wire  _T_56; 
  wire  _T_57; 
  wire  _T_58; 
  wire  _T_60; 
  wire  _T_61; 
  wire  _T_62; 
  wire  _T_63; 
  wire  ordered_lt; 
  wire  _T_64; 
  wire  _T_65; 
  wire  _T_66; 
  wire  ordered_eq; 
  wire  _T_67; 
  wire  _T_68; 
  wire  _T_69; 
  wire  _T_70; 
  wire  _T_71; 
  wire  _T_72; 
  wire  _T_73; 
  wire  _T_74; 
  wire  _T_75; 
  wire  invalid; 
  assign _T_11 = io_a[63:52]; 
  assign _T_12 = _T_11[11:9]; 
  assign rawA_isZero = _T_12 == 3'h0; 
  assign _T_14 = _T_11[11:10]; 
  assign _T_15 = _T_14 == 2'h3; 
  assign _T_17 = _T_11[9]; 
  assign rawA_isNaN = _T_15 & _T_17; 
  assign _T_20 = _T_17 == 1'h0; 
  assign rawA_isInf = _T_15 & _T_20; 
  assign rawA_sign = io_a[64]; 
  assign rawA_sExp = {1'b0,$signed(_T_11)}; 
  assign _T_24 = rawA_isZero == 1'h0; 
  assign _T_25 = io_a[51:0]; 
  assign _T_26 = {1'h0,_T_24}; 
  assign rawA_sig = {_T_26,_T_25}; 
  assign _T_28 = io_b[63:52]; 
  assign _T_29 = _T_28[11:9]; 
  assign rawB_isZero = _T_29 == 3'h0; 
  assign _T_31 = _T_28[11:10]; 
  assign _T_32 = _T_31 == 2'h3; 
  assign _T_34 = _T_28[9]; 
  assign rawB_isNaN = _T_32 & _T_34; 
  assign _T_37 = _T_34 == 1'h0; 
  assign rawB_isInf = _T_32 & _T_37; 
  assign rawB_sign = io_b[64]; 
  assign rawB_sExp = {1'b0,$signed(_T_28)}; 
  assign _T_41 = rawB_isZero == 1'h0; 
  assign _T_42 = io_b[51:0]; 
  assign _T_43 = {1'h0,_T_41}; 
  assign rawB_sig = {_T_43,_T_42}; 
  assign _T_45 = rawA_isNaN == 1'h0; 
  assign _T_46 = rawB_isNaN == 1'h0; 
  assign ordered = _T_45 & _T_46; 
  assign bothInfs = rawA_isInf & rawB_isInf; 
  assign bothZeros = rawA_isZero & rawB_isZero; 
  assign eqExps = $signed(rawA_sExp) == $signed(rawB_sExp); 
  assign _T_47 = $signed(rawA_sExp) < $signed(rawB_sExp); 
  assign _T_48 = rawA_sig < rawB_sig; 
  assign _T_49 = eqExps & _T_48; 
  assign common_ltMags = _T_47 | _T_49; 
  assign _T_50 = rawA_sig == rawB_sig; 
  assign common_eqMags = eqExps & _T_50; 
  assign _T_51 = bothZeros == 1'h0; 
  assign _T_52 = rawB_sign == 1'h0; 
  assign _T_53 = rawA_sign & _T_52; 
  assign _T_54 = bothInfs == 1'h0; 
  assign _T_55 = common_ltMags == 1'h0; 
  assign _T_56 = rawA_sign & _T_55; 
  assign _T_57 = common_eqMags == 1'h0; 
  assign _T_58 = _T_56 & _T_57; 
  assign _T_60 = _T_52 & common_ltMags; 
  assign _T_61 = _T_58 | _T_60; 
  assign _T_62 = _T_54 & _T_61; 
  assign _T_63 = _T_53 | _T_62; 
  assign ordered_lt = _T_51 & _T_63; 
  assign _T_64 = rawA_sign == rawB_sign; 
  assign _T_65 = bothInfs | common_eqMags; 
  assign _T_66 = _T_64 & _T_65; 
  assign ordered_eq = bothZeros | _T_66; 
  assign _T_67 = rawA_sig[51]; 
  assign _T_68 = _T_67 == 1'h0; 
  assign _T_69 = rawA_isNaN & _T_68; 
  assign _T_70 = rawB_sig[51]; 
  assign _T_71 = _T_70 == 1'h0; 
  assign _T_72 = rawB_isNaN & _T_71; 
  assign _T_73 = _T_69 | _T_72; 
  assign _T_74 = ordered == 1'h0; 
  assign _T_75 = io_signaling & _T_74; 
  assign invalid = _T_73 | _T_75; 
  assign io_lt = ordered & ordered_lt; 
  assign io_eq = ordered & ordered_eq; 
  assign io_exceptionFlags = {invalid,4'h0}; 
endmodule
