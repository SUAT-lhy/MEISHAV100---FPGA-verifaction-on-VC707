module AMOALU( 
  input  [7:0]  io_mask, 
  input  [4:0]  io_cmd, 
  input  [63:0] io_lhs, 
  input  [63:0] io_rhs, 
  output [63:0] io_out 
);
  wire  _T_10; 
  wire  _T_11; 
  wire  max; 
  wire  _T_12; 
  wire  _T_13; 
  wire  min; 
  wire  add; 
  wire  _T_14; 
  wire  _T_15; 
  wire  logic_and; 
  wire  _T_16; 
  wire  logic_xor; 
  wire  _T_18; 
  wire  _T_19; 
  wire [31:0] _GEN_0; 
  wire [31:0] _T_20; 
  wire [63:0] _T_21; 
  wire [63:0] _T_22; 
  wire [63:0] _T_23; 
  wire [63:0] _T_24; 
  wire [63:0] adder_out; 
  wire  _T_26; 
  wire [4:0] _T_28; 
  wire  _T_30; 
  wire  _T_31; 
  wire  _T_32; 
  wire  _T_33; 
  wire [31:0] _T_34; 
  wire [31:0] _T_35; 
  wire  _T_36; 
  wire  _T_39; 
  wire [31:0] _T_40; 
  wire [31:0] _T_41; 
  wire  _T_42; 
  wire  _T_43; 
  wire  _T_44; 
  wire  _T_47; 
  wire  _T_48; 
  wire  _T_49; 
  wire  _T_54; 
  wire  _T_55; 
  wire  _T_56; 
  wire  _T_62; 
  wire  _T_63; 
  wire  less; 
  wire  _T_64; 
  wire [63:0] minmax; 
  wire [63:0] _T_65; 
  wire [63:0] _T_66; 
  wire [63:0] _T_67; 
  wire [63:0] _T_68; 
  wire [63:0] logic$; 
  wire  _T_69; 
  wire [63:0] _T_70; 
  wire [63:0] out; 
  wire  _T_71; 
  wire  _T_72; 
  wire  _T_76; 
  wire  _T_77; 
  wire  _T_78; 
  wire [7:0] _T_80; 
  wire [7:0] _T_82; 
  wire [7:0] _T_84; 
  wire [7:0] _T_86; 
  wire [7:0] _T_88; 
  wire [7:0] _T_90; 
  wire [7:0] _T_92; 
  wire [7:0] _T_94; 
  wire [15:0] _T_95; 
  wire [15:0] _T_96; 
  wire [31:0] _T_97; 
  wire [15:0] _T_98; 
  wire [15:0] _T_99; 
  wire [31:0] _T_100; 
  wire [63:0] wmask; 
  wire [63:0] _T_101; 
  wire [63:0] _T_102; 
  wire [63:0] _T_103; 
  assign _T_10 = io_cmd == 5'hd; 
  assign _T_11 = io_cmd == 5'hf; 
  assign max = _T_10 | _T_11; 
  assign _T_12 = io_cmd == 5'hc; 
  assign _T_13 = io_cmd == 5'he; 
  assign min = _T_12 | _T_13; 
  assign add = io_cmd == 5'h8; 
  assign _T_14 = io_cmd == 5'ha; 
  assign _T_15 = io_cmd == 5'hb; 
  assign logic_and = _T_14 | _T_15; 
  assign _T_16 = io_cmd == 5'h9; 
  assign logic_xor = _T_16 | _T_14; 
  assign _T_18 = io_mask[3]; 
  assign _T_19 = _T_18 == 1'h0; 
  assign _GEN_0 = {{31'd0}, _T_19}; 
  assign _T_20 = _GEN_0 << 31; 
  assign _T_21 = {{32'd0}, _T_20}; 
  assign _T_22 = ~ _T_21; 
  assign _T_23 = io_lhs & _T_22; 
  assign _T_24 = io_rhs & _T_22; 
  assign adder_out = _T_23 + _T_24; 
  assign _T_26 = io_mask[4]; 
  assign _T_28 = io_cmd & 5'h2; 
  assign _T_30 = _T_28 == 5'h0; 
  assign _T_31 = io_lhs[63]; 
  assign _T_32 = io_rhs[63]; 
  assign _T_33 = _T_31 == _T_32; 
  assign _T_34 = io_lhs[63:32]; 
  assign _T_35 = io_rhs[63:32]; 
  assign _T_36 = _T_34 < _T_35; 
  assign _T_39 = _T_34 == _T_35; 
  assign _T_40 = io_lhs[31:0]; 
  assign _T_41 = io_rhs[31:0]; 
  assign _T_42 = _T_40 < _T_41; 
  assign _T_43 = _T_39 & _T_42; 
  assign _T_44 = _T_36 | _T_43; 
  assign _T_47 = _T_30 ? _T_31 : _T_32; 
  assign _T_48 = _T_33 ? _T_44 : _T_47; 
  assign _T_49 = io_mask[2]; 
  assign _T_54 = io_lhs[31]; 
  assign _T_55 = io_rhs[31]; 
  assign _T_56 = _T_54 == _T_55; 
  assign _T_62 = _T_30 ? _T_54 : _T_55; 
  assign _T_63 = _T_56 ? _T_42 : _T_62; 
  assign less = _T_26 ? _T_48 : _T_63; 
  assign _T_64 = less ? min : max; 
  assign minmax = _T_64 ? io_lhs : io_rhs; 
  assign _T_65 = io_lhs & io_rhs; 
  assign _T_66 = logic_and ? _T_65 : 64'h0; 
  assign _T_67 = io_lhs ^ io_rhs; 
  assign _T_68 = logic_xor ? _T_67 : 64'h0; 
  assign logic$ = _T_66 | _T_68; 
  assign _T_69 = logic_and | logic_xor; 
  assign _T_70 = _T_69 ? logic$ : minmax; 
  assign out = add ? adder_out : _T_70; 
  assign _T_71 = io_mask[0]; 
  assign _T_72 = io_mask[1]; 
  assign _T_76 = io_mask[5]; 
  assign _T_77 = io_mask[6]; 
  assign _T_78 = io_mask[7]; 
  assign _T_80 = _T_71 ? 8'hff : 8'h0; 
  assign _T_82 = _T_72 ? 8'hff : 8'h0; 
  assign _T_84 = _T_49 ? 8'hff : 8'h0; 
  assign _T_86 = _T_18 ? 8'hff : 8'h0; 
  assign _T_88 = _T_26 ? 8'hff : 8'h0; 
  assign _T_90 = _T_76 ? 8'hff : 8'h0; 
  assign _T_92 = _T_77 ? 8'hff : 8'h0; 
  assign _T_94 = _T_78 ? 8'hff : 8'h0; 
  assign _T_95 = {_T_82,_T_80}; 
  assign _T_96 = {_T_86,_T_84}; 
  assign _T_97 = {_T_96,_T_95}; 
  assign _T_98 = {_T_90,_T_88}; 
  assign _T_99 = {_T_94,_T_92}; 
  assign _T_100 = {_T_99,_T_98}; 
  assign wmask = {_T_100,_T_97}; 
  assign _T_101 = wmask & out; 
  assign _T_102 = ~ wmask; 
  assign _T_103 = _T_102 & io_lhs; 
  assign io_out = _T_101 | _T_103; 
endmodule
